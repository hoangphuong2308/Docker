# Use this empty Dockerfile to build your assignment


# This dir contains Python app, you need to get it running in a container
# No modifications to the app should be necessary, only edit this Dockerfile

# Instructions from the app developer
# - you should use the 'ubuntu' official image
# - then it should install the Python pip package to the ubuntu linux distribution:
                # 'apt-get update -y'
                # 'apt-get install -y python-pip python-dev build-essential'
        # optimize it !
# - then it should create directory /usr/src/app/ for app files with 'mkdir -p /usr/src/app/'
# - then it needs to copy requirements.txt and app.py to /usr/src/app/
# - then it needs to run 'pip install --no-cache-dir -r /usr/src/app/requirements.txt' to install dependencies from that file
# - this app listens on port 5000, but the container should launch on port 80
  #  so it will respond to http://localhost:80 on your computer
# - then it needs to start container with command 'python /usr/src/app/app.py'
# - build this dockerfile with another optimize images and find a smallest

#use offical python image
FROM python:3.6-alpine3.9

#default listen port 5000
EXPOSE 5000

#create directory /usr/src/app/ for app files with 'mkdir -p /usr/src/app/'
RUN mkdir -p /usr/src/app/

#move to working directory
WORKDIR /usr/src/app

#copy requirements.txt and app.py to /usr/src/app/
COPY app.py requirements.txt ./

#run 'pip install --no-cache-dir -r /usr/src/app/requirements.txt' to install dependencies from that file
RUN pip install --no-cache-dir -r /usr/src/app/requirements.txt

#start container with command 'python /usr/src/app/app.py'
CMD ["python", "./app.py"]
